# set up features
set(@PROJECT_NAME@_static_FOUND @DEWM_BUILD_STATIC@)

# Find the install directory
get_filename_component(@PROJECT_NAME@_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# Convert relative includes to absolute paths
# and set pkt_INCLUDE_DIRS for FindPkg
set(@PROJECT_NAME@_INCLUDE_DIRS "")
set(@PROJECT_NAME@_REL_INCLUDE_DIRS "@CONF_INCLUDE_DIRS@")
foreach(dir ${@PROJECT_NAME@_REL_INCLUDE_DIRS})
   get_filename_component(dir ${dir} ABSOLUTE PATH CACHE)
   list(APPEND @PROJECT_NAME@_INCLUDE_DIRS ${dir})
endforeach(dir)

# Add export targets
if (NOT TARGET @PROJECT_NAME@ AND NOT @PROJECT_NAME@_BINARY_DIR)
   include("${@PROJECT_NAME@_CMAKE_DIR}/@PROJECT_NAME@Targets.cmake")
endif()

# Set pkg_LIBRARIES for FindPkg
set(@PROJECT_NAME@_LIBRARIES @PROJECT_NAME@)

# Check features
foreach(f static)
   set(req @PROJECT_NAME@_FIND_REQUIRED_${f})
   set(havereq @PROJECT_NAME@_${f}_FOUND)
   if (${req} AND NOT ${havereq})
       message(WARNING "Required component @PROJECT_NAME@::${f} not present.")
      set(@PROJECT_NAME@_FOUND FALSE)      
   endif()
endforeach()

